# Generated by Django 5.1.4 on 2025-01-28 08:29

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KeywordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='MovieCastModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('original_name', models.CharField(max_length=255)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('popularity', models.FloatField(default=0)),
                ('profile_path', models.URLField(blank=True, null=True)),
                ('known_for_department', models.CharField(blank=True, max_length=255, null=True)),
                ('cast_id', models.IntegerField(unique=True)),
                ('character', models.CharField(max_length=255)),
                ('credit_id', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MovieCrewModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('original_name', models.CharField(max_length=255)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('popularity', models.FloatField(default=0)),
                ('profile_path', models.URLField(blank=True, null=True)),
                ('known_for_department', models.CharField(blank=True, max_length=255, null=True)),
                ('credit_id', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(max_length=255)),
                ('job', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PersonModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=255)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('popularity', models.FloatField(default=0)),
                ('profile_path', models.URLField(blank=True, null=True)),
                ('known_for_department', models.CharField(blank=True, max_length=255, null=True)),
                ('also_known_as', models.JSONField(default=list)),
                ('biography', models.TextField(blank=True, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('deathday', models.DateField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True)),
                ('imdb_id', models.CharField(blank=True, max_length=50, null=True)),
                ('homepage', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCompanyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=500)),
                ('logo_path', models.CharField(blank=True, max_length=500, null=True)),
                ('origin_country', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GenreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('popularity_score', models.FloatField(default=0.0)),
                ('parent_genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.genremodel')),
            ],
        ),
        migrations.CreateModel(
            name='MovieModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=500)),
                ('original_title', models.CharField(blank=True, max_length=500, null=True)),
                ('tagline', models.CharField(blank=True, max_length=500, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('runtime', models.PositiveIntegerField(blank=True, null=True)),
                ('budget', models.BigIntegerField(blank=True, null=True)),
                ('revenue', models.BigIntegerField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=300, null=True)),
                ('popularity', models.FloatField(blank=True, null=True)),
                ('vote_average', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('vote_count', models.PositiveIntegerField(blank=True, null=True)),
                ('original_language', models.CharField(blank=True, max_length=10, null=True)),
                ('imdb_id', models.CharField(blank=True, max_length=50, null=True)),
                ('belongs_to_collection', models.JSONField(blank=True, default=list, null=True)),
                ('poster_path', models.URLField(blank=True, null=True)),
                ('backdrop_path', models.URLField(blank=True, null=True)),
                ('teaser_link', models.TextField(blank=True, null=True)),
                ('trailer_link', models.TextField(blank=True, null=True)),
                ('awards', models.JSONField(blank=True, default=list, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user_ratings_count', models.PositiveIntegerField(default=0)),
                ('streaming_platforms', models.JSONField(blank=True, default=list, null=True)),
                ('cached_average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('homepage', models.URLField(blank=True, null=True)),
                ('spoken_languages', models.JSONField(blank=True, default=list, null=True)),
                ('production_countries', models.JSONField(blank=True, default=list, null=True)),
                ('cast', models.ManyToManyField(related_name='movies', to='Users.moviecastmodel')),
                ('crew', models.ManyToManyField(related_name='movies', to='Users.moviecrewmodel')),
                ('genres', models.ManyToManyField(related_name='movies', to='Users.genremodel')),
                ('keywords', models.ManyToManyField(related_name='movies', to='Users.keywordmodel')),
                ('production_companies', models.ManyToManyField(related_name='movies', to='Users.productioncompanymodel')),
            ],
        ),
        migrations.AddField(
            model_name='moviecrewmodel',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.moviemodel'),
        ),
        migrations.AddField(
            model_name='moviecastmodel',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.moviemodel'),
        ),
        migrations.CreateModel(
            name='FeedbackModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_helpful', models.BooleanField(default=False)),
                ('feedback_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('detailed_feedback', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.moviemodel')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteMoviesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.moviemodel')),
            ],
        ),
        migrations.AddField(
            model_name='moviecrewmodel',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.personmodel'),
        ),
        migrations.AddField(
            model_name='moviecastmodel',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.personmodel'),
        ),
        migrations.CreateModel(
            name='RatingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=3)),
                ('review', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.moviemodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseDateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=400)),
                ('release_date', models.DateField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='release_dates', to='Users.moviemodel')),
            ],
        ),
        migrations.CreateModel(
            name='UserMovieHistoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watched_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('rating_given', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('watched', 'Watched'), ('paused', 'Paused'), ('unfinished', 'Unfinished')], default='inactive', max_length=50)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.moviemodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('subscription_type', models.CharField(choices=[('free', 'Free'), ('premium', 'Premium'), ('vip', 'VIP')], default='free', max_length=50)),
                ('preferred_actors', models.ManyToManyField(blank=True, to='Users.personmodel')),
                ('preferred_genres', models.ManyToManyField(blank=True, to='Users.genremodel')),
                ('preferred_movies', models.ManyToManyField(blank=True, to='Users.moviemodel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WatchlistModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.moviemodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='moviecrewmodel',
            unique_together={('member', 'movie')},
        ),
        migrations.AlterUniqueTogether(
            name='moviecastmodel',
            unique_together={('member', 'movie', 'order')},
        ),
        migrations.AddIndex(
            model_name='moviemodel',
            index=models.Index(fields=['tmdb_id'], name='Users_movie_tmdb_id_5faab1_idx'),
        ),
        migrations.AddIndex(
            model_name='moviemodel',
            index=models.Index(fields=['title'], name='Users_movie_title_880d01_idx'),
        ),
        migrations.AddIndex(
            model_name='moviemodel',
            index=models.Index(fields=['release_date'], name='Users_movie_release_d161f1_idx'),
        ),
        migrations.AddIndex(
            model_name='moviemodel',
            index=models.Index(fields=['popularity'], name='Users_movie_popular_1b790e_idx'),
        ),
        migrations.AddIndex(
            model_name='moviemodel',
            index=models.Index(fields=['vote_average'], name='Users_movie_vote_av_aa1d3f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ratingmodel',
            unique_together={('user', 'movie')},
        ),
        migrations.AddIndex(
            model_name='releasedatemodel',
            index=models.Index(fields=['country', 'release_date'], name='Users_relea_country_21976e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='releasedatemodel',
            unique_together={('movie', 'country')},
        ),
    ]
